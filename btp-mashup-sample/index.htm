<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Extension Samples</title>
</head>

<body>
	<script src="script.js"></script>
	<style>
		.collapsible {
		border: 1px solid #ddd;
		border-radius: 5px;
		padding: 10px;
		margin-bottom: 10px;
		background-color: #F5F6F7;
		}

		.toggle-button {
		background-color: #00144A;
		color: white;
		border: none;
		padding: 10px;
		cursor: pointer;
		width: 100%;
		text-align: left;
		}

		.toggle-button:focus {
		outline: none;
		}

		.content {
		display: none;
		padding: 15px;
		background-color: #F5F6F7;
		}

		
		.info-box {
			position: relative;
			padding: 0px;
			border: 1px solid #ddd;
			background-color: #e3f2fd;
			border-radius: 5px;
			margin: 0px;
			}

			.info-box .info-content {
			margin-left: 5px; /* Adjust based on icon size */
			}

		body {
			font-family: Arial, sans-serif;
			margin: 20px;
			background-color: #FFFFFF; /* Sets the background color of the entire web page */	
			color: #475E75;
		}
			
			table {
			width: 100%;
			border-collapse: collapse;
			margin-bottom: 20px;
			}
			th, td {
			border: 1px solid #cccccc;
			padding: 8px;
			text-align: left;
			}
			th {
			background-color: #f4f4f4;
			}
			.gantt-chart {
			position: relative;
			width: 100%;
			height: 200px;
			border: 1px solid #ccc;
			background-color: #fafafa;
			}
			.gantt-bar {
			position: absolute;
			background-color: #4caf50;
			color: #fff;
			padding: 5px;
			height: 25px;
			line-height: 25px;
			border-radius: 3px;
			text-align: center;
			}
			.timeline {
			display: flex;
			justify-content: space-between;
			position: absolute;
			bottom: 0;
			width: 100%;
			padding: 0 5px;
			box-sizing: border-box;
			}
			.timeline div {
			width: 1px;
			height: 10px;
			background-color: #000;
			}

	</style>

	<div class="collapsible">
		<h3>Frontend deployed at BTP Cloud Foundry and developed with ChatGPT</h3>
	
		<button class="toggle-button">Click to expand</button>
		<div class="content">
			<div class="info-box">
				<div class="info-content">
					<p>ℹ️ This frontend is 100% generated by a promt. In this case we used ChatGPT 4 and the following prompt: Can you please program an html page that has a table with a list of projects. Each project should be selectable and in a detail view there should be a list of milestones for each project. Below the projects and the milestone tables should be a GANT chart representing the milestones visually.</p>
					<p>Check out this very nice <a target="_blank" href="https://community.sap.com/t5/technology-blogs-by-sap/sap-tech-bytes-deploy-a-static-web-page-cloud-foundry-basics-1/ba-p/13546743">tutorial how to deploy a very basic html page</a> to Cloud Foundry on the BTP.</p>
				</div>
			</div>
			<h1>Project Management Dashboard</h1>
			<table id="projects-table">
			<thead>
			<tr>
			<th>Project ID</th>
			<th>Project Name</th>
			</tr>
			</thead>
			<tbody>
			<tr onclick="selectProject(1)">
			<td>1</td>
			<td>Project Alpha</td>
			</tr>
			<tr onclick="selectProject(2)">
			<td>2</td>
			<td>Project Beta</td>
			</tr>
			<tr onclick="selectProject(3)">
			<td>3</td>
			<td>Project Gamma</td>
			</tr>
			</tbody>
			</table>

			<h2>Project Milestones</h2>
			<table id="milestones-table">
			<thead>
			<tr>
			<th>Milestone ID</th>
			<th>Milestone Name</th>
			<th>Start Date</th>
			<th>End Date</th>
			</tr>
			</thead>
			<tbody>
			<!-- Milestones will be inserted here via JavaScript -->
			</tbody>
			</table>

			<h2>Gantt Chart</h2>
			<div class="gantt-chart" id="gantt-chart">
			<!-- Gantt chart bars and timeline will be inserted here via JavaScript -->
			</div>	
	</div>
</div>

</br>

<div class="collapsible">
	<h3>Mashup: Parameters</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">	
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ In most cases you need to connect some parameters like the account id to your embedded website. This you can simply do via the parameters. More infos regarding mashups can be found in the <a target="_blank" href="https://help.sap.com/docs/CX_NG_SVC/56436b4e8fa84dc8b4408c7795a012c4/5a9d11b0c9944e49bb2c556be534b40f.html?locale=en-US&q=mashup">documentation.</a> </p>
			</div>
		</div>

		</br>
		</br>1st Parameter:</br> <input type="text" id="Parameter1" readonly></br>
		</br>2nd Parameter:</br> <input type="text" id="Parameter2" readonly>

		<script>
			// JavaScript code goes here
			// Get Parameters from iFrame
			function getUrlParams() {
				const urlParams = new URLSearchParams(window.location.search);
				const param1 = urlParams.get('param1');
				const param2 = urlParams.get('param2');
				console.log(param1, param2); // Outputs: value1 value2
				
				// Display the variable in the HTML element
				document.getElementById('Parameter1').value = param1;
				document.getElementById('Parameter2').value = param2;
				
			}
			
			window.onload = getUrlParams;

			</script>

	</div>
</div>

</br>


<div class="collapsible">
	<h3>Mashup: Buttons that interact with the solution</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ When embedding your application via a mashup there is often the need to link back to existing CRM data. Such links should open in-app and not in a seperate window.</p>
				<p>You can achieve this by using the "callback operations". You can read more about it here in the <a target="_blank" href="https://help.sap.com/docs/CX_NG_SVC/56436b4e8fa84dc8b4408c7795a012c4/3a2771e63c7c43b8a97fee813d939793.html">documentation</a> and also in this <a target="_blank" href="https://community.sap.com/t5/crm-and-cx-blogs-by-sap/using-ui-events-in-sap-sales-and-service-cloud-v2/ba-p/13953443">blog post</a> explains the topic nicely.
			</div>
		</div>
		</br>

			<input type='button' value='Open Case List' onclick='openNewCnsCaseList();' />
			<input type='button' value='Open Open Single Case' onclick='openNewCnsCaseViewWithRoutingKey();' />
			<input type='button' value='Open Case Create' onclick='openNewCnsCaseCreate();' />	
		</div>


		<script>
						
			// Open Case List View
			function openNewCnsCaseList() {
				var oCase = {operation: "navigation", params: {routingKey: "case", viewType: "list"}};
				window.parent.postMessage(oCase, '*')
			}

			// Open specific Case
			function openNewCnsCaseViewWithRoutingKey() {
				var oCase = {operation: "navigation", params: {objectKey: "45413257-b7bc-11ef-aee8-63f1e786c385", routingKey: "case"}};
				window.parent.postMessage(oCase, '*')
			}

			// Open Case Quick Create view
			function openNewCnsCaseCreate() {
				var oCase={operation:"navigation", params: {routingKey: "case", viewType:"quickcreate"}};
				self.window.parent.postMessage(oCase, '*')
			}

		</script>

</div>

</br>


<div class="collapsible">
	<h3>Mashup: Special events</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">	
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ Sometimes your custom application should trigger an event on the solution frontend like a refresh. For this we have so call custom events.</p>
				<p>Just imagine you have a mashup in a "case" and you have a button that has a logic which affects the priority of your case. The update will be done via the API and in order to refresh the users screen automatically you can trigger the "refresh event" on the overlaying UI directly from your mashup after you did the API call.</p>
				<p>There is a nice <a target="_blank" href="https://community.sap.com/t5/crm-and-cx-blogs-by-sap/calling-sap-sales-and-service-cloud-v2-apis-from-sap-build-apps/ba-p/13964852">blog on the topic</a>.
			</div>
		</div>

	</br>
		Refresh Event in Case</br>
		<input type='button' value='Refresh Case' onclick='RefreshEvent();' /></br></br>

		Search Event in Agent Desktop</br>
		<input type='button' value='Trigger Search' onclick='triggerSearchEvent();' /></br>

		<script>

				
			// Trigger Refresh Event
			function RefreshEvent() {
				var customEvent = { event: "customRefreshEvent", params: {  } }
				self.window.parent.postMessage(customEvent, '');
				return { result: true };
			}

			// Trigger Search in Agent Desktop
			function triggerSearchEvent() {
			var event = {event: "mashup100.magiccom.customExtendedSearch", operation: "search", params: {$search: "alex"}};
			window.parent.postMessage(event, '*')
			}
			

		</script>

	</div>
</div>

</br>

<div class="collapsible">
	<h3>Deep Links that directly open a view or object</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">	
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ You may have the requirement to provide a deep link to either a data record or a certain view of the solution. For this you can create deep links.</p>
				<p>More details about all the different options you find in the <a target="_blank" href="https://help.sap.com/docs/CX_NG_SVC/56436b4e8fa84dc8b4408c7795a012c4/4bef029989344abb9a3c4de37da0d82d.html">documentation</a>.
			</div>
		</div>

	</br>Insert your System URL to calculate the links: YOUR URL
</br> What options do you want for your link: CHECKBOXES with Options
</br> Button: Calculate Links
</br>

		Some detail view examples:</br></br>
		- Check out this <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/detail/guidedselling?id=470cedf2-5bc1-11ef-a186-6d8b68968484&ui-header=false&ui-tabs=false">Opportunity</a>.</br>
		- Check out this <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/detail/lead?displayId=3398">Case</a>.</br>
		- Check out this <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/detail/mdaccount?displayId=1000240">Account</a>.</br>
	</br>
		Some list view examples:
		- Check out the <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/list/guidedselling">list of all opportunities</a>.</br>
		- Check out the <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/list/case">list of all cases</a>.</br>
		- Check out the <a target="_blank" href="https://my1000003.de1.test.crm.cloud.sap/go/list/mdaccount">list of all accounts</a>.</br>

	</div>
</div>

</br>



<div class="collapsible">
	<h3>Further useful extension topics</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">	
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ In this section I collected some further interesting topics and the relevant documentations for extensibility.</p>
			</div>
		</div>

		<ul>
			<li>Custom Key Metrics</li>
			<li>Custom Services</li>
			<li>Autoflows</li>
			<li>External Hooks</li>
			<li>CAP Applications on BTP</li>
			<li>External Hooks</li>
			<li>In-App Extension Fields</li>
			<li>In-App Dynamic Layouts</li>
			<li>In-App Page Layouts</li>
			<li>In-App Adaptation</li>
			<li>In-App Extension Fields</li>
			<li>In-App Code List Restrictions</li>
			<li>In-App Language Adaptation</li>
			<li>In-App Custom Workcenter</li>
			<li>In-App Custom Logic</li>
			<li>Event Mesh Integration</li>
			<li>SAP Build Apps</li>
		</ul>

	</div>
</div>

</br>



<!-- 

<div class="collapsible">
	<h3>this is a placeholder for more</h3>
	<button class="toggle-button">Click to expand</button>
	<div class="content">	
		<div class="info-box">
			<div class="info-content">
				<p>ℹ️ first line of your info box</p>
				<p>Second line with a useful <a target="_blank" href="https://help.sap.com/docs/CX_NG_SVC/56436b4e8fa84dc8b4408c7795a012c4/3a2771e63c7c43b8a97fee813d939793.html">link</a>.
			</div>
		</div>

		Content here 

	</div>
</div>

</br>

-->

</body>
</html>
